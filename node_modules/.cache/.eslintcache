[{"/home/pkj/Desktop/Calculator/calculator-app/src/index.js":"1","/home/pkj/Desktop/Calculator/calculator-app/src/App.js":"2","/home/pkj/Desktop/Calculator/calculator-app/src/reportWebVitals.js":"3","/home/pkj/Desktop/Calculator/calculator-app/src/Heading.js":"4"},{"size":653,"mtime":1684648590405,"results":"5","hashOfConfig":"6"},{"size":4446,"mtime":1684655793722,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1684643491142,"results":"8","hashOfConfig":"6"},{"size":273,"mtime":1684648653181,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},"1d8j5ff",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/pkj/Desktop/Calculator/calculator-app/src/index.js",["25"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ToastContainer } from 'react-toastify';\nimport { FaCalculator } from 'react-icons/fa';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    <ToastContainer />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/home/pkj/Desktop/Calculator/calculator-app/src/App.js",["26","27","28"],[],"\nimport './App.css';\nimport { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport Heading from './Heading';\nimport { FaCalculator } from 'react-icons/fa';\nfunction App() {\n  const [value, setValue] = useState('');\n \n\n  const handleEvaluate = () => {\n    try {\n      if(value.includes('^')){\n        const [base, exponent] = value.split('^');\n      const result = Math.pow(parseFloat(base), parseFloat(exponent));\n      setValue(result.toString());\n      }\n      else{\n      const evaluatedResult = eval(value);\n      setValue(evaluatedResult)\n      }\n    } catch (error) {\n      toast.error('Invalid expression entered', {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      setValue('');\n    }\n  };\n\n  const handleClear = () => {\n    setValue('');\n  };\n  const handleButtonClick = (e) => {\n    const buttonValue = e.target.value;\n\n    if (buttonValue === 'sqrt') {\n      const result = Math.sqrt(parseFloat(value));\n      setValue(result.toString());\n    }\n   else if (buttonValue === 'log') {\n      const result = Math.log10(parseFloat(value));\n      setValue(result.toString());\n    }\n    else if (buttonValue === 'ln') {\n      const result = Math.log(parseFloat(value));\n      setValue(result.toString());\n    }\n    else if (buttonValue === 'X !') {\n      const num = parseInt(value);\n      if (isNaN(num) || num < 0) {\n        toast.error('Invalid expression entered', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        let result = 1;\n        for (let i = 2; i <= num; i++) {\n          result *= i;\n        }\n        setValue(result.toString());\n      }\n    }\n     else {\n      setValue(value + buttonValue);\n    }\n  };\n\n  return (\n    <div>\n       <Heading/>\n    <div className='container'>\n     \n      <div className='calculator'>\n        <form action=''>\n          <div className='screen'>\n            <input type='text' value={value} readOnly />\n          </div>\n          <div>\n            <input type='button' value='AC' onClick={handleClear} />\n            <input type='button' value='C' onClick={() => setValue(value.slice(0, -1))} />\n            <input type='button' value='.' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='/' onClick={(e) => setValue(value + e.target.value)} />\n          </div>\n          <div>\n            <input type='button' value='7' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='8' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='9' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='*' onClick={(e) => setValue(value + e.target.value)} />\n          </div>\n          <div>\n            <input type='button' value='4' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='5' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='6' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='+' onClick={(e) => setValue(value + e.target.value)} />\n          </div>\n          <div>\n            <input type='button' value='1' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='2' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='3' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='-' onClick={(e) => setValue(value + e.target.value)} />\n          </div>\n          <div>\n            <input type='button' value='log' onClick={handleButtonClick} />\n            <input type='button' value='X !' onClick={handleButtonClick} />\n            <input type='button' value='sqrt'  onClick={handleButtonClick} />\n            <input type='button' value='ln'  onClick={handleButtonClick} />\n          </div>\n          <div>\n            <input type='button' value='%' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='0' onClick={(e) => setValue(value + e.target.value)} />\n            <input type='button' value='=' onClick={handleEvaluate} />\n            <input type='button' value='^'  onClick={(e)=>setValue(value+e.target.value)} />\n          </div>\n\n        </form>\n       \n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/pkj/Desktop/Calculator/calculator-app/src/reportWebVitals.js",[],[],"/home/pkj/Desktop/Calculator/calculator-app/src/Heading.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":7,"column":10,"nodeType":"31","messageId":"32","endLine":7,"endColumn":22},{"ruleId":"29","severity":1,"message":"33","line":4,"column":10,"nodeType":"31","messageId":"32","endLine":4,"endColumn":24},{"ruleId":"29","severity":1,"message":"30","line":7,"column":10,"nodeType":"31","messageId":"32","endLine":7,"endColumn":22},{"ruleId":"34","severity":1,"message":"35","line":20,"column":31,"nodeType":"36","messageId":"37","endLine":20,"endColumn":35},"no-unused-vars","'FaCalculator' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","no-eval","eval can be harmful.","CallExpression","unexpected"]